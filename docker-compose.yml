services:
  # Database MySQL
  db:
    image: mysql:${MYSQL_VERSION:-8.0}
    platform: linux/amd64  # Compatibilità M1
    container_name: ${PROJECT_NAME:-wp}_mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_NAME:-wordpress}
      MYSQL_USER: ${DB_USER:-wordpress}
      MYSQL_PASSWORD: ${DB_PASSWORD:-wordpress}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root}
    volumes:
      - ./data/mysql:/var/lib/mysql
      - ./data/imports:/docker-entrypoint-initdb.d
    networks:
      - wordpress-network
    command: '--default-authentication-plugin=mysql_native_password'

  # Memcached for WordPress caching
  memcached:
    image: memcached:${MEMCACHED_VERSION:-alpine}
    platform: linux/amd64  # Compatibilità M1
    container_name: ${PROJECT_NAME:-wp}_memcached
    restart: unless-stopped
    command: memcached -m 64 -p 11211 -u memcache -l 0.0.0.0
    networks:
      - wordpress-network

  # WordPress con PHP-FPM e supporto cache
  wordpress:
    build:
      context: .
      dockerfile: Dockerfile.wordpress
      args:
        PHP_VERSION: ${PHP_VERSION:-8.1}
    platform: linux/amd64  # Compatibilità M1
    container_name: ${PROJECT_NAME:-wp}_wordpress
    restart: unless-stopped
    depends_on:
      - db
      - memcached
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_NAME: ${DB_NAME:-wordpress}
      WORDPRESS_DB_USER: ${DB_USER:-wordpress}
      WORDPRESS_DB_PASSWORD: ${DB_PASSWORD:-wordpress}
      WORDPRESS_DEBUG: ${WP_DEBUG:-true}
      WORDPRESS_TABLE_PREFIX: ${WP_TABLE_PREFIX:-wp_}
      MEMCACHED_HOST: memcached:11211
      XDEBUG_MODE: ${XDEBUG_MODE:-off}
      XDEBUG_CONFIG: "client_host=host.docker.internal client_port=9003 idekey=PHPSTORM"
    volumes:
      - ./data/wordpress:/var/www/html
      - ./configs/php/custom.ini:/usr/local/etc/php/conf.d/custom.ini:ro
      - ./configs/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini:ro
      - ./scripts:/scripts:ro
    ports:
      - "${XDEBUG_PORT:-9003}:9003"
    networks:
      - wordpress-network

  # Nginx Web Server
  nginx:
    image: nginx:${NGINX_VERSION:-alpine}
    platform: linux/amd64  # Compatibilità M1
    container_name: ${PROJECT_NAME:-wp}_nginx
    restart: unless-stopped
    depends_on:
      - wordpress
    ports:
      - "${WEB_PORT:-8080}:80"
    volumes:
      - ./data/wordpress:/var/www/html:ro
      - ./configs/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - wordpress-network

  # phpMyAdmin
  phpmyadmin:
    image: phpmyadmin:${PHPMYADMIN_VERSION:-latest}
    platform: linux/amd64  # Compatibilità M1
    container_name: ${PROJECT_NAME:-wp}_phpmyadmin
    restart: unless-stopped
    depends_on:
      - db
    environment:
      PMA_HOST: db
      PMA_USER: root
      PMA_PASSWORD: ${DB_ROOT_PASSWORD:-root}
      UPLOAD_LIMIT: 300M
    ports:
      - "${PMA_PORT:-8082}:80"
    networks:
      - wordpress-network

  # WP-CLI per operazioni di manutenzione
  wpcli:
    build:
      context: .
      dockerfile: Dockerfile.wordpress
      args:
        PHP_VERSION: ${PHP_VERSION:-8.1}
    platform: linux/amd64  # Compatibilità M1
    container_name: ${PROJECT_NAME:-wp}_wpcli
    depends_on:
      - db
      - wordpress
    volumes:
      - ./data/wordpress:/var/www/html
      - ./configs/php/xdebug-cli.ini:/usr/local/etc/php/conf.d/xdebug.ini:ro
      - ./scripts:/scripts
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_NAME: ${DB_NAME:-wordpress}
      WORDPRESS_DB_USER: ${DB_USER:-wordpress}
      WORDPRESS_DB_PASSWORD: ${DB_PASSWORD:-wordpress}
      XDEBUG_MODE: ${XDEBUG_CLI_MODE:-off}
      XDEBUG_CONFIG: "client_host=host.docker.internal client_port=9003 idekey=WPCLI"
      XDEBUG_TRIGGER: ${XDEBUG_TRIGGER:-1}
    networks:
      - wordpress-network
    entrypoint: ["wp", "--allow-root"]
    command: ["--info"]

networks:
  wordpress-network:
    driver: bridge

volumes:
  db_data:
  wordpress_data: